{"version":3,"sources":["script.js"],"names":["URL","CHECKINS_URL","quoteeUrl","start_date","end_date","async","fetchDates","url","target","btn_text","innerText","response","await","fetch","ok","json","Error","status","error","console","log","precessDates","data","let","item","enable_dates","enable_dates_obj","i","_embedded","hotel_availabilities","date","showMonthsVar","window","innerWidth","flatpickr","dateFormat","closeOnSelect","mode","showMonths","enable","onDayCreate","dObj","dStr","fp","dayElem","day","formattedDate","Intl","DateTimeFormat","format","dateObj","innerHTML","price","onOpen","selectedDates","dateStr","instance","calendar_container","calendarContainer","wrapper","document","createElement","apply_button","id","parentNode","insertBefore","appendChild","textContent","className","addEventListener","close","input_dates","input","value","displayRooms","split","onClose","getElementById","remove","open","createCalendar","fetchRooms","section_rooms","roomCard","message","room_card","querySelectorAll","hotel_quotes","forEach","element","classList","rooms","map","room","index","suspens_block_classname","suspens_line_classname","description","img","amenitie","nights","full_formatted_price","fullPriceBreakdown","pictures","offer_teaser_ncol","amenities","reduce","btn","onclick","event"],"mappings":"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","file":"all.min.js","sourcesContent":["\"use strict\";\n\nconst URL = \"https://api.travelcircus.net/hotels/17080/\";\n\nconst CHECKINS_URL = `${URL}checkins?E&party=%7B%22adults%22:2,%22childre\nn%22:%5B%5D%7D&domain=de&date_start=2025-01-01&date_end=2025-06-31`;\n\nfunction quoteeUrl(start_date, end_date) {\n  return `${URL}quotes?locale=de_DE&checkin=${start_date}\n&checkout=${end_date}&party=%7B\"adults\":2,\"children\":[]%7D&domain=de`;\n}\n\n/*\n ** Get Available dates from API.\n */\nasync function fetchDates(url, target) {\n  const btn_text = target.innerText;\n  target.innerText = \"loading...\";\n\n  try {\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.log(\"Error: \" + error);\n  } finally {\n    target.innerText = btn_text;\n  }\n}\n\n/*\n ** Put Available Dates to the Calendar\n */\nfunction precessDates(data) {\n  let enable_dates = [];\n  let enable_dates_obj = {};\n  let i = 0;\n  for (let item of data._embedded.hotel_availabilities) {\n    enable_dates[i] = item.date;\n    enable_dates_obj[item.date] = item;\n    i++;\n  }\n\n  let showMonthsVar = window.innerWidth > 800 ? 2 : 1;\n\n  const config = {\n    dateFormat: \"Y-m-d\",\n    closeOnSelect: false,\n    mode: \"range\",\n    showMonths: showMonthsVar,\n    enable: enable_dates,\n    onDayCreate: function (dObj, dStr, fp, dayElem) {\n      const formattedDate = new Intl.DateTimeFormat(\"en-CA\").format(\n        dayElem.dateObj\n      );\n\n      if (enable_dates_obj[formattedDate]) {\n        let day = dayElem.innerHTML;\n        dayElem.innerHTML = `\n        <span class='day-number'>${day}</span>\n          <span class='day-price'>${enable_dates_obj[formattedDate].price}</span>\n          `;\n      }\n    },\n\n    onOpen: (selectedDates, dateStr, instance) => {\n      const calendar_container = instance.calendarContainer;\n      const wrapper = document.createElement(\"div\");\n      wrapper.id = \"calendar-wrapper\";\n      calendar_container.parentNode.insertBefore(wrapper, calendar_container);\n      wrapper.appendChild(calendar_container);\n      const apply_button = document.createElement(\"button\");\n      apply_button.textContent = \"Apply\";\n      apply_button.className = \"apply-button btn\";\n      calendar_container.appendChild(apply_button);\n\n      apply_button.addEventListener(\"click\", () => {\n        instance.close();\n\n        let input_dates = instance.input.value;\n        let start_date = input_dates.split(\" to \")[0];\n        let end_date = input_dates.split(\" to \")[1];\n        displayRooms(start_date, end_date);\n      });\n    },\n    onClose: function (selectedDates, dateStr, instance) {\n      const calendar_wrapper = document.getElementById(\"calendar-wrapper\");\n      calendar_wrapper.remove();\n    },\n  };\n\n  let calendar = flatpickr(\"#calendar\", config);\n  calendar.open();\n}\n\n/*\n ** Create Calendar\n */\nasync function createCalendar(url, target) {\n  const data = await fetchDates(url, target);\n  precessDates(data);\n}\n\n/*\n ** Get Available Rooms from API for the selected dates\n */\nasync function fetchRooms(start_date, end_date) {\n  const url = quoteeUrl(start_date, end_date);\n  const section_rooms = document.getElementById(\"section--rooms\");\n  section_rooms.innerHTML = roomCard();\n  const message = document.getElementById(\"section--message\");\n  const room_card = document.querySelectorAll(\".room-card\");\n\n  try {\n    message.innerHTML = \"\";\n\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const hotels = await response.json();\n\n    return hotels._embedded.hotel_quotes;\n  } catch (error) {\n    const section_rooms = document.getElementById(\"section--rooms\");\n    section_rooms.innerHTML = null;\n\n    message.innerHTML = `<div class=\"error-message\">\n    There are no rooms available for the selected period. Please try another dates.</div>`;\n\n    console.log(\"Error: \" + error);\n  } finally {\n    room_card.forEach((element) => {\n      element.classList.remove(\"suspense-block\");\n    });\n  }\n}\n\n/*\n ** Display Rooms\n */\nasync function displayRooms(start_date, end_date) {\n  const rooms = await fetchRooms(start_date, end_date);\n  const section_rooms = document.getElementById(\"section--rooms\");\n  section_rooms.innerHTML = null;\n  if (rooms) {\n    rooms.map((room, index) => {\n      let room_card = roomCard(room, index);\n      section_rooms.innerHTML += room_card;\n    });\n  }\n}\n\n/*\n ** Template for Rooms article with suspense effect\n */\nfunction roomCard(room, index = 0) {\n  let suspens_block_classname = \"suspense-block\";\n  let suspens_line_classname = \"suspense-line\";\n  let description = \"\";\n  let img = \"\";\n  let amenitie = \"\";\n  let price = \"\";\n  let nights = \"\";\n\n  if (room) {\n    suspens_block_classname = \"\";\n    suspens_line_classname = \"\";\n    description = room.description;\n    price = room.full_formatted_price;\n    nights = room.fullPriceBreakdown.nights;\n\n    img = `<img src=\"${room._embedded.pictures[0].offer_teaser_ncol}\"\n     alt=\"${room._embedded.pictures[0].description}\" loading=\"lazy\" />`;\n\n    if (room._embedded.amenities) {\n      amenitie = room._embedded.amenities.reduce((amenities, item) => {\n        return amenities + `<div>${item.description}</div>`;\n      }, \"\");\n    }\n  }\n\n  return `\n    <article id=\"section--rooms--${index}\" class=\"room-card ${suspens_block_classname}\">\n                <div class=\"room-card--left\">\n                    ${img}\n                </div>\n                <div class=\"room-card--right\">\n                    <div class=\"room-card--body\">\n                        <h2 class=\"room-card--header\">${description}</h2>\n                        <div class=\"room-card--body--amenities ${suspens_line_classname}\">\n                        ${amenitie}\n                        </div>\n                    </div>\n                    <div class=\"room-card--body--price\">\n                        <span class=\"room-card--body--price--number ${suspens_line_classname}\">\n                          ${price}\n                        </span>\n                        <span class=\"room-card--body--price--nights ${suspens_line_classname}\">\n                          for ${nights} nights\n                        </span>\n                        <span class=\"room-card--body--price--book ${suspens_line_classname}\">\n                          <button class=\"btn\">Book</button>\n                        </span>\n                    </div>\n                </div>\n            </article>`;\n}\n\n/*\n ** onClick event for the \"Check Availabilities\" button\n */\nlet btn = document.getElementById(\"check-availabilities--btn\");\nbtn.onclick = (event) => createCalendar(CHECKINS_URL, event.target);\n"]}